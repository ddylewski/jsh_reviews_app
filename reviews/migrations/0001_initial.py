# Generated by Django 5.2.5 on 2025-08-16 15:20

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('author_name', models.CharField(blank=True, max_length=255)),
                ('isbn', models.CharField(blank=True, max_length=13, null=True, unique=True)),
                ('publisher', models.CharField(blank=True, max_length=255)),
                ('publication_year', models.PositiveIntegerField(blank=True, null=True)),
                ('date_received', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('ACQ', 'Acquired'), ('ASG', 'Assigned'), ('CMP', 'Review Complete')], default='ACQ', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Reviewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('honorific', models.CharField(blank=True, help_text='Title such as Dr, Mr, Ms, etc.', max_length=20)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('post_nominals', models.CharField(blank=True, help_text='Credentials such as PhD, MD, etc.', max_length=50)),
                ('title', models.CharField(blank=True, help_text='Official title, e.g., Professor of History', max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('institution', models.CharField(blank=True, max_length=200)),
                ('address_line_1', models.CharField(help_text='Main street address or department name', max_length=255)),
                ('address_line_2', models.CharField(blank=True, help_text='Optional second line for mail stop, building, etc.', max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Specialties',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('OFF', 'Offered'), ('ACC', 'Accepted'), ('DRF', 'Draft Received'), ('PUB', 'Published')], default='OFF', max_length=3)),
                ('date_assigned', models.DateField(blank=True, null=True)),
                ('date_due', models.DateField(blank=True, null=True)),
                ('book', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reviews.book')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reviews.reviewer')),
            ],
        ),
        migrations.AddField(
            model_name='reviewer',
            name='specialties',
            field=models.ManyToManyField(blank=True, to='reviews.specialty'),
        ),
        migrations.AddField(
            model_name='book',
            name='specialties',
            field=models.ManyToManyField(blank=True, to='reviews.specialty'),
        ),
    ]
